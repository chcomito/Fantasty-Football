extends layout

block content
  // Set default values if nameHeaders or rowHeaders are not provided
  - var nameHeaders = nameHeaders || ['mike', 'jay', 'tuck', 'b petty', 'julian', 'sean', 'chris', 'puma']
  - var rowHeaders = rowHeaders || ['Qb', 'Qb', 'Rb', 'Rb', 'Wr', 'Wr', 'Te', 'Flex', 'Def', 'K', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B']

  table
    thead
      tr
        th -----------------
        each colHeader in nameHeaders
          th= colHeader
    tbody
      each rowHeader, rowIndex in rowHeaders
        tr
          th= rowHeader
          each col, colIndex in nameHeaders
            td
              input.draft-input(
                type='text',
                name=`input-${rowIndex}-${colIndex}`,
                style='width: 100%; border: none; box-sizing: border-box; color: grey;'
              )

  script.
    document.addEventListener('DOMContentLoaded', () => {
      // Load saved data
      const savedData = localStorage.getItem('formData');
      if (savedData) {
        const formData = JSON.parse(savedData);
        for (const [key, value] of Object.entries(formData)) {
          const input = document.querySelector(`input[name="${key}"]`);
          if (input) {
            input.value = value;
          }
        }
      }

      // Save data on change
      document.querySelectorAll('input[type="text"]').forEach(input => {
        input.addEventListener('change', () => {
          const formData = {};
          document.querySelectorAll('input[type="text"]').forEach(input => {
            formData[input.name] = input.value;
          });
          localStorage.setItem('formData', JSON.stringify(formData));
        });
      });
    });
